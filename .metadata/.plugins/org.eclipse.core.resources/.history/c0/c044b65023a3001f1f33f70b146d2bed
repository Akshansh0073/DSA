package com.ixnixi.controller.misreport;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ixnixi.bean.ResultDTO;
import com.ixnixi.model.ISPMember;
import com.ixnixi.model.member.MemberConnectionDetails;
import com.ixnixi.rest.BaseController;

@CrossOrigin(origins = "*", maxAge = 3600)
@RestController
@RequestMapping("/user")
public class MISIspController extends BaseController{
	ResultDTO<?> responsePacket = null;
	
	@GetMapping("/getISPReport")
	public Object getISPReport(ISPMember ispMember) {
		System.err.println("::getAllIspMember::"+ispMember);
		//List<ISPMember> ispMembersData = iSPMemberRepository.findAll();Role List fetched successfully
		List<ISPMember> ispMembersData = iSPMemberRepository.findAll();
		try {
			 if(ispMembersData.isEmpty()) {
				 responsePacket = new ResultDTO<>(true, null, "Record not found !!");
					return new ResponseEntity<>(responsePacket, HttpStatus.OK);
			 }else {
				 responsePacket = new ResultDTO<>(true, ispMembersData, "Role List fetched successfully");
					return new ResponseEntity<>(responsePacket, HttpStatus.OK); 
			 }
		} catch (Exception e) {
			e.printStackTrace();
			responsePacket = new ResultDTO<>(false, null, e.getMessage());
			return new ResponseEntity<>(responsePacket, HttpStatus.BAD_REQUEST);
		}

	}
	
	@GetMapping("/getMemberConnectionDetailsList")
	public Object getMemberConnectionDetailsList(Authentication auth) {
		System.err.println("::::MISIspController.addBGPDetails::::");
		List<MemberConnectionDetails> membersList = memberConnectionDetailsRepo.findAll();
		try {
			if(membersList.isEmpty()) {
				responsePacket = new ResultDTO<>(false,null, "Record not found !!");
				return new ResponseEntity<>(responsePacket, HttpStatus.BAD_REQUEST);
			}else {
				responsePacket = new ResultDTO<>(true,membersList,"requestSuccess!!");
				return new ResponseEntity<>(responsePacket, HttpStatus.OK);
			}
		
		}catch (Exception e) {
			e.printStackTrace();
			responsePacket = new ResultDTO<>(false, null, e.getMessage());
			return new ResponseEntity<>(responsePacket, HttpStatus.BAD_REQUEST);
		}
	}
}
